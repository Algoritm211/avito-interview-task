{"version":3,"sources":["components/ModalWindow/ModalWindow.module.css","App.module.css","components/ImageScreen/ImageScreen.module.css","components/ImageScreen/ImagesElement/ImagesElement.module.css","redux/image-selector.ts","components/ImageScreen/ImagesElement/ImagesElement.tsx","api/images-api.ts","redux/images-reducer.ts","components/ModalWindow/SendCommentForm.tsx","components/Loader/Loader.tsx","components/ModalWindow/ModalWindow.tsx","components/common/TimeDataHelp.ts","components/common/UseOutsideClick.ts","components/ImageScreen/ImageScreen.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx"],"names":["module","exports","getImages","state","imagesReducer","images","getComments","imgInfo","comments","getLargeImage","url","getIsLoading","isLoadingInfo","ImageElement","props","Fragment","src","imageUrl","alt","className","classes","image","onClick","onOpenModal","instanceAxios","axios","create","baseURL","ImagesAPI","get","data","id","then","photoDescr","post","response","SET_IMAGES","SET_IMAGE_DATA","DELETE_IMAGE_DATA","SET_IS_LOADING_DATA","initialState","actions","type","imgData","isLoading","CommentForm","dispatch","useDispatch","formik","useFormik","initialValues","firstName","comment","onSubmit","values","a","console","log","handleSubmit","commentForm","name","onChange","handleChange","value","customInput","placeholder","commentButton","Loader","Comment","date","unixtimestamp","Date","year","getFullYear","month","getMonth","day","getDate","convert","dateComment","commentText","text","ModalWindow","useSelector","photo","useParams","history","useHistory","backdrop","useRef","width","window","innerWidth","useEffect","loadImageInfo","onClose","push","pathname","setIsOpenModal","ref","callback","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","useOutsideClick","commentBlock","map","index","classNames","modalWindowContainer","open","modalWindow","photoInputs","imageModal","length","commentFormBlock","SendCommentForm","closeModal","ImageScreen","useState","isOpenModalWindow","setIsOpenModalWindow","imagesComponent","toString","desktopContainer","photoContainer","App","mainHeader","path","render","from","to","footer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","basename","process","getElementById"],"mappings":"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","file":"static/js/main.98cba09a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalWindowContainer\":\"ModalWindow_modalWindowContainer__KmSsH\",\"open\":\"ModalWindow_open__2tWb1\",\"modalWindow\":\"ModalWindow_modalWindow__30kgI\",\"closeModal\":\"ModalWindow_closeModal__3UEU1\",\"imageModal\":\"ModalWindow_imageModal__1z_6-\",\"commentFormBlock\":\"ModalWindow_commentFormBlock__1FzuO\",\"commentForm\":\"ModalWindow_commentForm__1JuOW\",\"commentButton\":\"ModalWindow_commentButton__1tETn\",\"commentBlock\":\"ModalWindow_commentBlock__2bzmT\",\"comment\":\"ModalWindow_comment__2Nqi8\",\"dateComment\":\"ModalWindow_dateComment__3_Qhz\",\"commentText\":\"ModalWindow_commentText__2SUHw\",\"photoInputs\":\"ModalWindow_photoInputs__13PL6\",\"customInput\":\"ModalWindow_customInput__1PkIp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"mainHeader\":\"App_mainHeader__3L_RI\",\"footer\":\"App_footer__29Fsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoContainer\":\"ImageScreen_photoContainer__oyRAS\",\"desktopContainer\":\"ImageScreen_desktopContainer__3dPOH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ImagesElement_image__2F_VT\"};","import { AppStateType } from \"./redux-store\";\n\n\nexport const getImages = (state: AppStateType) => {\n  return state.imagesReducer.images\n\n}\n\nexport const getComments = (state: AppStateType) => {\n  return state.imagesReducer.imgInfo.comments\n}\n\nexport const getLargeImage = (state: AppStateType) => {\n  return state.imagesReducer.imgInfo.url\n}\n\nexport const getIsLoading = (state: AppStateType) => {\n  return state.imagesReducer.isLoadingInfo\n}","import React from 'react'\nimport classes from './ImagesElement.module.css'\n\ntype Props = {\n  imageUrl: string\n  onOpenModal: () => void\n}\n\nexport const ImageElement: React.FC<Props> = (props) => {\n\n  return (\n    <React.Fragment>\n      <img src={props.imageUrl} alt={'GalleryPhoto'} className={classes.image} onClick={props.onOpenModal}/>\n    </React.Fragment>\n  )\n}","import axios from 'axios'\nimport {ImageType, PhotoDescriptionType} from '../types/types'\n\n\nexport const instanceAxios = axios.create({\n  baseURL: 'https://boiling-refuge-66454.herokuapp.com/images/'\n})\n\nexport const ImagesAPI = {\n  async getImages() {\n    const images = await instanceAxios.get<Array<ImageType>>('')\n    return images.data\n  },\n  async getPhotoDescription(id: string) {\n    const photoDescr = await instanceAxios.get<PhotoDescriptionType>(id).then(data => data)\n    return photoDescr.data\n  },\n  async commentImage(id: string) {\n    const response = await instanceAxios.post(`${id}/comments`).then(data => data)\n    return response.data\n  }\n}\n","import {ImageType, PhotoDescriptionType} from \"../types/types\";\nimport {BaseThunkType, InferActionsType} from \"./redux-store\";\nimport {ImagesAPI} from \"../api/images-api\";\n\n\nconst SET_IMAGES = 'frontend-interview-task/image-reducer/SET_IMAGES'\nconst SET_IMAGE_DATA = 'frontend-interview-task/image-reducer/SET_IMAGE_DATA'\nconst DELETE_IMAGE_DATA = 'frontend-interview-task/image-reducer/DELETE_IMAGE_DATA'\nconst SET_IS_LOADING_DATA = 'frontend-interview-task/image-reducer/SET_IS_LOADING_DATA'\n\n\nconst initialState = {\n  images: [] as Array<ImageType>,\n  imgInfo: {} as PhotoDescriptionType,\n  isLoadingInfo: false\n}\n\nexport const imagesReducer = (state = initialState, action: ActionTypes) => {\n  switch (action.type) {\n    case SET_IMAGES:\n      return {\n        ...state,\n        images: [...state.images, ...action.images]\n      }\n    case SET_IMAGE_DATA:\n      return {\n        ...state,\n        imgInfo: {...action.imgData}\n      }\n    case DELETE_IMAGE_DATA:\n      return {\n        ...state,\n        imgInfo: {} as PhotoDescriptionType\n      }\n    case SET_IS_LOADING_DATA:\n      return {\n        ...state,\n        isLoadingInfo: action.isLoading\n      }\n    default:\n      return state\n  }\n}\n\n\nexport const actions = {\n  setImages(images: Array<ImageType>) {\n    return {\n      type: SET_IMAGES,\n      images\n    } as const\n  },\n\n  setImageData(imgData: PhotoDescriptionType) {\n    return {\n      type: SET_IMAGE_DATA,\n      imgData: imgData\n    } as const\n  },\n\n  removeImageData() {\n    return {\n      type: DELETE_IMAGE_DATA,\n    } as const\n  },\n\n  setLoadingInfo(isLoading: boolean) {\n    return {\n      type: SET_IS_LOADING_DATA,\n      isLoading: isLoading\n    } as const\n  }\n}\n\n\nexport const loadImages = (): ThunkType => async (dispatch) => {\n  const images = await ImagesAPI.getImages()\n  dispatch(actions.setImages(images))\n}\n\n\nexport const loadImageInfo = (id: string): ThunkType => async (dispatch) => {\n  dispatch(actions.setLoadingInfo(true))\n  const imgInfo = await ImagesAPI.getPhotoDescription(id)\n  dispatch(actions.setLoadingInfo(false))\n  dispatch(actions.setImageData(imgInfo))\n}\n\nexport const commentImage = (id: string): ThunkType => async (dispatch) => {\n  const response = await ImagesAPI.commentImage(id)\n  console.log(response)\n}\n\ntype ActionTypes = InferActionsType<typeof actions>\ntype ThunkType = BaseThunkType<ActionTypes>","import React from 'react'\nimport {useFormik} from \"formik\";\nimport {commentImage} from \"../../redux/images-reducer\";\nimport classes from \"./ModalWindow.module.css\";\nimport {useDispatch} from \"react-redux\";\n\n\ntype CommentFormType = {\n  firstName: string,\n  comment: string\n}\n\ntype Props = {\n  id: string | undefined\n}\n\n\nconst CommentForm: React.FC<Props> = (props) => {\n\n  const dispatch = useDispatch()\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      comment: ''\n    } as CommentFormType,\n    onSubmit: (values: CommentFormType) => {\n      //alert(JSON.stringify(values, null, 2));\n\n      if (props.id) {\n        dispatch(commentImage(props.id))\n      }\n    },\n  });\n\n\n  return (\n    <form onSubmit={formik.handleSubmit} className={classes.commentForm}>\n      <div>\n        <input\n          id=\"firstName\"\n          name=\"firstName\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.firstName}\n          className={classes.customInput}\n          placeholder={'Ваше имя'}\n        />\n      </div>\n      <div>\n        <input\n          id=\"comment\"\n          name=\"comment\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.comment}\n          className={classes.customInput}\n          placeholder={'Ваша фамилия'}\n        />\n      </div>\n      <div>\n        <button type={\"submit\"} className={classes.commentButton}>\n          Оставить комментарий\n        </button>\n      </div>\n    </form>\n  )\n}\nexport default CommentForm","import React from \"react\";\nimport './Loader.css'\n\n\nconst Loader: React.FC = () => {\n  return (\n    <div className='Loader'>\n      <div className=\"loadingio-spinner-pulse-4acf414061e\">\n        <div className=\"ldio-scotsrxdwc\">\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Loader","import React, {useEffect, useRef} from 'react'\nimport classes from './ModalWindow.module.css'\nimport classNames from 'classnames'\nimport {useHistory, useParams} from \"react-router-dom\";\nimport {useOutsideClick} from '../common/UseOutsideClick';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actions, loadImageInfo} from '../../redux/images-reducer';\nimport {getComments, getIsLoading, getLargeImage} from '../../redux/image-selector';\nimport {CommentType} from '../../types/types';\nimport {convert} from '../common/TimeDataHelp';\nimport SendCommentForm from \"./SendCommentForm\";\nimport Loader from \"../Loader/Loader\";\n\n\ntype PropsModal = {\n  setIsOpenModal: (isOpen: boolean) => void\n}\n\n\nconst ModalWindow: React.FC<PropsModal> = (props) => {\n\n\n  const dispatch = useDispatch()\n  const comments = useSelector(getComments)\n  const photo = useSelector(getLargeImage)\n  const {id} = useParams<{ id: string | undefined }>()\n  const isLoading = useSelector(getIsLoading)\n  const history = useHistory()\n  const backdrop = useRef<HTMLDivElement | null>(null);\n  const width = window.innerWidth\n\n  useEffect(() => {\n    if (id) {\n      dispatch(loadImageInfo(id))\n    }\n  }, [id, dispatch])\n\n  const onClose = () => {\n    if (id) {\n      history.push({\n        pathname: '/images/'\n      })\n    }\n    props.setIsOpenModal(false)\n    dispatch(actions.removeImageData())\n  }\n\n  useOutsideClick(backdrop as React.MutableRefObject<HTMLDivElement>, onClose);\n\n  const commentBlock = comments?.map((comment, index) => {\n    return <Comment comment={comment} key={index}/>\n  })\n\n  if (width < 700) {\n    return (\n      <div className={classNames(classes.modalWindowContainer, {[classes.open]: id})}>\n        <div className={classes.modalWindow} ref={backdrop}>\n          {\n            isLoading\n              ? <Loader/>\n              : <React.Fragment>\n                <div className={classes.photoInputs}>\n                  <div>\n                    {photo && <img src={photo} alt={'largeIMG'} className={classes.imageModal}/>}\n                  </div>\n                  <div className={classes.commentBlock}>\n                    {!comments?.length &&\n                    <div>\n                      Комментариев еще нет. Вы можете быть первым)\n                    </div>\n                    }\n                    {commentBlock}\n                  </div>\n                  <div className={classes.commentFormBlock}>\n                    <SendCommentForm id={id}/>\n                  </div>\n                </div>\n                <div className={classes.closeModal} onClick={onClose}>\n                  <i className=\"fas fa-times\"></i>\n                </div>\n              </React.Fragment>\n          }\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className={classNames(classes.modalWindowContainer, {[classes.open]: id})}>\n      <div className={classes.modalWindow} ref={backdrop}>\n        {\n          isLoading\n            ? <Loader/>\n            : <React.Fragment>\n              <div className={classes.photoInputs}>\n                <div>\n                  {photo && <img src={photo} alt={'largeIMG'} className={classes.imageModal}/>}\n                </div>\n                <div className={classes.commentFormBlock}>\n                  <SendCommentForm id={id}/>\n                </div>\n              </div>\n              <div className={classes.commentBlock}>\n                {!comments?.length &&\n                <div>\n                  Комментариев еще нет. Вы можете быть первым)\n                </div>\n                }\n                {commentBlock}\n              </div>\n              <div className={classes.closeModal} onClick={onClose}>\n                <i className=\"fas fa-times\"></i>\n              </div>\n            </React.Fragment>\n        }\n      </div>\n    </div>\n  )\n}\n\n\ntype Props = {\n  comment: CommentType\n}\n\nconst Comment: React.FC<Props> = (props) => {\n\n  const date = convert(props.comment.date)\n\n  return (\n    <div className={classes.comment}>\n      <div className={classes.dateComment}>\n        {date}\n      </div>\n      <div className={classes.commentText}>\n        {props.comment.text}\n      </div>\n    </div>\n  )\n}\n\nexport default ModalWindow","\n\nexport function convert(unixtimestamp: number) {\n  const months_arr = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];\n  const date = new Date(unixtimestamp * 1000);\n  const year = date.getFullYear();\n  const month = months_arr[date.getMonth()];\n  const day = date.getDate();\n\n  return `${day}.${month}.${year}`\n}","import React, {useEffect} from \"react\";\n\nexport const useOutsideClick = (ref: React.MutableRefObject<HTMLDivElement>, callback: () => void) => {\n  const handleClick = (e: MouseEvent) => {\n    if (ref.current && !ref.current.contains(e.target as Node)) {\n      callback();\n    }\n  };\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  });\n};","import React, {useEffect, useState} from 'react'\nimport classes from './ImageScreen.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getImages} from \"../../redux/image-selector\";\nimport {ImageElement} from \"./ImagesElement/ImagesElement\";\nimport {loadImages} from '../../redux/images-reducer';\nimport ModalWindow from \"../ModalWindow/ModalWindow\";\nimport {useHistory} from 'react-router-dom';\n\nconst ImageScreen: React.FC = () => {\n\n  const [isOpenModalWindow, setIsOpenModalWindow] = useState(false)\n\n  let history = useHistory();\n\n  const onOpenModal = (id: number) => {\n    setIsOpenModalWindow(true)\n    history.push(id.toString())\n  }\n\n  const dispatch = useDispatch()\n\n  const images = useSelector(getImages)\n\n  const onLoadImages = () => {\n    dispatch(loadImages())\n  }\n\n  useEffect(onLoadImages, [dispatch])\n\n  const imagesComponent = images.map((image) => {\n    return (\n      <ImageElement imageUrl={image.url} key={image.id} onOpenModal={() => onOpenModal(image.id)}/>\n    )\n  })\n\n  return (\n    <div className={classes.desktopContainer}>\n      <div className={classes.photoContainer}>\n        {imagesComponent}\n        {isOpenModalWindow && <ModalWindow setIsOpenModal={setIsOpenModalWindow}/>}\n      </div>\n    </div>\n  )\n}\nexport default ImageScreen","import React from 'react';\nimport {Redirect, Route, Switch } from 'react-router-dom';\nimport classes from './App.module.css';\nimport ImageScreen from \"./components/ImageScreen/ImageScreen\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <h1 className={classes.mainHeader}>Test app</h1>\n      </header>\n      <section>\n        <Switch>\n          <Route\n            path={'/images/:id?'}\n            render={() => <ImageScreen />}/>\n          <Redirect from={'/'} to={'/images/'}/>\n        </Switch>\n      </section>\n      <div className={classes.footer}>\n        @ 2019 - 2020\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Action, applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\nimport {imagesReducer} from \"./images-reducer\";\n\nconst rootReducer = combineReducers({\n  imagesReducer: imagesReducer\n})\n\ntype RootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<RootReducerType>\n\n\ntype PropertiesType<T> = T extends {[key: string]: infer U} ? U : never\n\nexport type InferActionsType<A extends {[key: string]: (...args: any) => any}> = ReturnType<PropertiesType<A>>\nexport type BaseThunkType<AT extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, AT>\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunkMiddleware)\n));\n\n// @ts-ignore\nwindow.__store__ = store\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport store from './redux/redux-store';\nimport {HashRouter} from \"react-router-dom\";\n//import {BrowserRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}